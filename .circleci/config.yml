# Python CircleCI 2.0 configuration file
version: 2
jobs:
  test:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          key: test-dependencies-v2-{{ checksum "scripts/requirements.txt" }}
      - run:
          name: Install Python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r scripts/requirements.txt
      - save_cache:
          key: test-dependencies-v2-{{ checksum "scripts/requirements.txt" }}
          paths:
            - ./venv
      - run:
          name: Check data
          command: |
            . venv/bin/activate
            python3 scripts/check_data.py
  build:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          key: test-dependencies-v1-{{ checksum "scripts/requirements.txt" }}
      - run:
          name: Install Python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r scripts/requirements.txt
      - save_cache:
          key: test-dependencies-v1-{{ checksum "scripts/requirements.txt" }}
          paths:
            - ./venv
      - run:
          name: Build data
          command: |
            . venv/bin/activate
            python3 scripts/build_data.py
      - persist_to_workspace:
          root: ~/repo
          paths:
            - _site
  deploy_staging:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "51:a6:1e:fa:f0:cd:77:82:e5:48:6b:83:9b:6b:54:b6"
      - attach_workspace:
          at: /tmp/build
      - run:
          name: Deploy to Github
          command: bash scripts/deploy/circleci/deploy_staging.sh
      - run: 
          name: Waiting for staging data deployment
          command: |
            printf "Waiting 5 minutes for the data to finish deploying to the staging site"
            sleep 300
      - run:
          name: Trigger staging site deployment
          command: |
            printf "Triggering an $SITE_REPO_NAME build on the $CIRCLE_BRANCH branch\n\n"

            curl -u ${CIRCLE_TOKEN}: \
                 -d build_parameters[CIRCLE_JOB]=deploy_staging \
                 https://circleci.com/api/v1/project/$SITE_REPO_ORG/$SITE_REPO_NAME/tree/$CIRCLE_BRANCH

            printf "\n\nBuild triggered\n\n"
            printf "Follow the progress of the build on \nhttps://circleci.com/gh/$SITE_REPO_ORG/$SITE_REPO_NAME/tree/$CIRCLE_BRANCH"
  deploy_prod:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo
    steps:
      - checkout
      - add_ssh_keys:
          finterprints:
            - "5a:06:6e:45:09:33:58:15:c1:9c:82:99:46:cd:8c:b3"
      - attach_workspace:
          at: /tmp/build
      - run:
          name: Deploy to production Github
          command: bash scripts/deploy/circleci/deploy_prod.sh
      - run: 
          name: Waiting for staging data deployment
          command: |
            printf "Waiting 5 minutes for the data to finish deploying to the staging site"
            sleep 300
      - run:
          name: Trigger live site deployment
          command: |
            printf "Triggering an $SITE_REPO_NAME build on the $CIRCLE_BRANCH branch\n\n"

            curl -u ${CIRCLE_TOKEN}: \
                 -d build_parameters[CIRCLE_JOB]=deploy_prod \
                 https://circleci.com/api/v1/project/$SITE_REPO_ORG/$SITE_REPO_NAME/tree/$CIRCLE_BRANCH

            printf "\n\nBuild triggered\n\n"
            printf "Follow the progress of the build on \nhttps://circleci.com/gh/$SITE_REPO_ORG/$SITE_REPO_NAME/tree/$CIRCLE_BRANCH"
workflows:
  version: 2
  build-deploy:
    jobs:
      - test:
          filters:
            branches:
              ignore:
                - gh-pages
      - build:
          requires:
            - test
          filters:
            branches:
              only:
                - develop
                - master
      - deploy_staging:
          requires:
            - build
          filters:
            branches:
              only: develop
      - deploy_prod:
          requires:
            - build
          filters:
            branches:
              only: master
